<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../../docbook-customization/src/docbkx-stylesheet/common/komet.rnc" type="application/relax-ng-compact-syntax"?>
<article version="5.0" xml:lang="en-US" xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:ns5="http://www.w3.org/1999/xhtml"
    xmlns:ns4="http://www.w3.org/1998/Math/MathML"
    xmlns:ns3="http://www.w3.org/2000/svg"
    xmlns:ns="http://docbook.org/ns/docbook">
    <info>
        <title>Analysis and Recommendations for the Persistence and Subsumption-Testing of Post-Coordinated Expressions
            
        </title>
        <author>
            <personname>Walter Sujansky</personname>
        </author>
        
        <date>2017-09-30</date>
    </info>
    <section>
        <title>Introduction</title>
        <para>This document is a technical white paper that describes various options for
            representing post-coordinated expressions encoded in SNOMED CT (SCT) and for supporting
            query processing against such expressions. </para>
        <para>This document first provides a brief background on post-coordination in SCT and
            describes the scope of our analysis. The report next describes the requirements for
            managing clinical observations that were used to inform the analysis. The following
            section presents a set of relevant design dimensions and specific design options for
            each dimension. Lastly, the report presents a set of recommendations with respect to
            each design dimension, as well as an example observation instance encoded per these
            recommendations.</para>
    </section>
    <section xml:id="_Ref160169044">
        <title>Background and Scope</title>
        <para>Healthcare organizations are striving to capture and store clinical observations in an
            electronic format. The goal of this project is to standardize the storage of
            observations in order to enable the sharing of observation data among clinical
            applications (such as inpatient and outpatient EHRs) and the centralization of services
            that automatically process observation data (such as reporting and decision support
            services). </para>
        <para>The standardization of clinical observations in a manner that supports automated
            processing requires a formal terminology model. The most important requirements of such
            a terminology model are that (1) it can represent any clinician-specified observation
            accurately and precisely and (2) it can support automated query and retrieval operations
            correctly and efficiently. Many healthcare organizations have selected SNOMED CT (SCT)
            for its clinical observation terminology model. </para>
        <para>SCT consists of a large set of pre-defined medical concepts (currently &gt; 350,000
            concepts) that are hierarchically organized and inter-related. The size of SCT helps the
            terminology meet the first requirement noted above, i.e. adequate coverage of the
            observations that clinicians need to document. The hierarchical and other relationships
            within SCT help it meet the second requirement, i.e., support for relevant query and
            retrieval operations. To illustrate the contents and structure of the SCT terminology,
            the following graphic shows a subset of the pre-defined concepts that might be used to
            populate a medical record:</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="images/image2.png"
                        width="5.5in"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Using SCT, a clinician can document that a patient has bacterial pneumonia by
            specifying in the patient’s record the unique SCT identifier for that concept, i.e., the
            clinician would add the following entry:</para>
        <para>Bacterial Pneumonia (ConceptID = 53084003)</para>
        <para>Additionally, a reporting program would use the SCT hierarchy to automatically
            retrieve the same patient’s record in response to the query “retrieve all patients with
            any infectious disease (Infectious Disease : ConceptID = 40733004) on their problem
            list”. The program could automatically determine whether bacterial pneumonia (Bacterial
            Pneumonia : ConceptID = 53084003) is an infectious disease (Infectious Disease :
            ConceptID = 40733004) by using a process called <emphasis>subsumption
            testing</emphasis>.</para>
        <para>Importantly, SCT also supports the ability to express new medical concepts by
            combining pre-existing ones. This process, called
            <emphasis>post-coordination</emphasis>, enables clinicians who use SCT to express
            observations that do not appear as pre-defined concepts in the terminology, thereby
            vastly increasing SCT’s expressive power. For example, a clinician could document that a
            patient has “bacterial pneumonia caused by methicillin-resistant Staph. Aureus” by
            combining the pre-existing concept “bacterial pneumonia” with the pre-existing concept
            “Methicillin Resistant Staph. Aureus” and specifying that the latter is the “causative
            agent” of the former. The patient’s medical record would then contain an entry
            consisting of the following expression: </para>
        <para>Bacterial Pneumonia (ConceptID = 53084003) : Causative Agent (ConceptID=246075003) =
            Methicillin Resistant Staph. Aureus (ConceptID=115329001)</para>
        <para>If specified correctly, post-coordinated expressions also support subsumption testing.
            Hence, the patient whose record contains the expression above would also be identified
            by the query “find all patients with a diagnosis of any infectious disease (Infectious
            Disease : ConceptID = 40733004) in their record.”</para>
        <para>For additional background information on the SNOMED terms and concepts used in this
            report, please see the glossary in Appendix A.</para>
        <para>Although very useful, post-coordination creates a number of practical challenges for
            information systems that support this capability. The foremost challenge, and the one
            that has been most studied, is the design of user interfaces that enable clinicians to
            create post-coordinated expressions efficiently, intuitively, and in a manner that is
            consistent with the SCT terminology model. However, another important set of challenges
            pertain to the management of post-coordinated expressions <emphasis>after</emphasis>
            they have been specified by clinicians. These management tasks include the appropriate
            persistence of post-coordinated observations in a patient database and efficient
            subsumption testing against records that include post-coordinated observations. This
            report addresses those data-management challenges, which include:</para>
        <itemizedlist>
            <listitem>
                <para>Determining the<emphasis> degree of transformation and
                        normalization</emphasis> to apply to post-coordinated expressions when they
                    are persisted in a database. What transformations and normalizations
                    appropriately balance the needs of storage efficiency, retrieval performance,
                    terminology evolution, and medicolegal requirements?</para>
            </listitem>
            <listitem>
                <para>Determining the specific <emphasis>structure and syntax</emphasis> for
                    representing post-coordinated expressions when they are persisted in a database.
                    What structure and syntax appropriately balance the needs of storage efficiency,
                    retrieval performance, interoperability, and software evolution?</para>
            </listitem>
            <listitem>
                <para>Determining the appropriate way to represent the
                        <emphasis>contextual</emphasis>
                    <emphasis>modifiers </emphasis>for observations within post-coordinated
                    expressions. For example, representing modifiers that indicate whether an
                    observation is a current diagnosis for the patient, a past medical problem of
                    the patient, or a disorder in the patient’s family history.</para>
            </listitem>
            <listitem>
                <para>Determining appropriate strategies for <emphasis>optimizing the performance of
                        subsumption testing</emphasis> against post-coordinated expressions (a
                    critical but inherently costly operation). Potential strategies include
                    maintaining a transitive closure of the SCT hierarchy and incorporating
                    post-coordinated concepts into the SCT terminology model (“just-in-time
                    pre-coordination”).</para>
            </listitem>
        </itemizedlist>
        <para>The report first summarizes requirements for managing clinical observations that
            pertain to the persistence and processing of post-coordinated SCT expressions. The
            report then describes various options for addressing the challenges listed above,
            including advantages and disadvantages, and concludes with specific technical
            recommendations.</para>
        <para>The sections below use the following terms, as defined by the SCT terminology model.
            For readers not familiar with these terms, a glossary appears in Appendix A.</para>
        <para>concept Concept Attribute Relationship Concept Definition Pre-coordinated concept
            Expression Post-coordinated Expression Refinement Focus Concept Subsumption Testing
            Equivalence Testing Predicate Expression Candidate Expression</para>
    </section>
    <section xml:id="_Ref162029866">
        <title>Requirements and Assumptions</title>
        <para>The recommendations in this report are based on requirements and assumptions related
            to the electronic capture, storage, and analysis of clinical observations. Although the
            requirements for managing observations cover many areas, such as terminology
            maintenance, data entry, and validation, the items below include only those requirements
            most relevant to the <emphasis>persistence</emphasis> and
                <emphasis>subsumption</emphasis>
            <emphasis>testing</emphasis> of <emphasis>post-coordinated observation
                expressions</emphasis>. These requirements fall into several categories.</para>
        <section>
            <title>Expressivity Requirements</title>
            <para>The representation of observation expressions must fully and unambiguously capture
                the meaning intended by the documenting clinician. The representations of captured
                observations must support review by clinical care givers with no loss of information
                or change in meaning. This is critical for safe and effective clinical care. The
                representations must also support automated processing with a minimum of information
                loss or distortion (although 100% fidelity may not be possible or needed).</para>
            <para>One of the purposes of using SCT for electronic health records is to support the
                expressivity needs of both human users and computer processes. Free text provides
                expressivity for human users at the cost of reliable automated analysis. Traditional
                coding systems, such as ICD-9-CM, support automated analysis at the cost (sometimes)
                of rich and accurate clinical expressivity. The following alternative
                representations of an observation show some of the trade-offs.</para>
            <para><emphasis role="underline">Free Text</emphasis>: “Fx L femur
                    2<superscript>-0</superscript> to MVA”</para>
            <para>This is the form that a clinician might document in a medical record, if
                unconstrained by a coding system or terminology model. It is concise and
                understandable to clinicians, but would require sophisticated natural language
                processing to support automated analysis.</para>
            <para><emphasis role="underline">ICD-9-CM</emphasis>: 821.00 (Fracture of unspecified
                part of femur closed)</para>
            <para>This is the code that a clinician might select if constrained to the list of
                ICD-9-CM codes. It supports certain automated analyses (such as classification), but
                does not fully express the clinical observation. For example, although there do
                exist additional “E” codes that specify the cause of injuries, E codes are optional
                for billing purposes and unlikely to be assigned by clinicians. Also, ICD-9-CM does
                not specify the laterality of limb fractures.</para>
            <para><emphasis role="underline">SCT Post-coordinated expression</emphasis>: Fracture of
                Femur : Finding Site = Structure of Femur : Laterality = Left,</para>
            <para>This is the post-coordinated expression that is consistent with the SCT
                terminology model. It consists of a formal representation this is amenable to
                classification as a “fracture” or an “injury of left lower extremity” via
                subsumption testing. Although SCT does contain a concept for “motor vehicle
                accident,” the terminology model does not currently allow (“sanction”) that this
                concept be designated as the cause of an injury. Specifying the cause would require
                adding a free-text annotation to the expression (for example, the text “due to
                MVA”). Such an annotation would fall outside the SCT terminology model. By allowing
                such annotations, the complete clinical information may be captured, although only
                the structured SCT expression is amenable to automated analysis. Specifically,
                subsumption testing could not automatically classify the observation as an “injury
                due to a motor vehicle accident” </para>
            <para><emphasis role="underline">Text rendition of SCT post-coordinated
                    expression</emphasis>: “Fracture of femur, left, due to MVA”</para>
            <para>This is the text rendition of the post-coordinated expression, intended for human
                review. The full expression has been condensed to remove redundant information, and
                the free-text annotation has been appended. Like the free-text expression, it is
                concise and complete. Unlike the free-text expression, it corresponds to a
                structured representation that supports (some) automated processing based on a
                formal terminology model.</para>
        </section>
        <section>
            <title>Retrieval and Analysis Requirements</title>
            <para>The post-coordinated SCT expressions stored in the medical record must support a
                number of different tasks (use cases): </para>
            <orderedlist>
                <listitem>
                    <para><emphasis role="bold">Human review</emphasis> of an individual patient’s
                        medical record in the course of providing or reviewing that patient’s
                        clinical care. Examples include display of the medical record to a primary
                        care physician, referred specialist, emergency-room physician,
                        disease-management nurse, insurance claims reviewer or medical malpractice
                        attorney. </para>
                </listitem>
                <listitem>
                    <para>Application of <emphasis role="bold">automated decision-support</emphasis>
                        logic to an individual patient’s medical record to improve the provision,
                        review, or billing of that patient’s clinical care. Examples include
                        guideline software that suggest needed interventions during a clinical
                        encounter or coding software that suggests the optimal billing codes for a
                        clinical encounter.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Search</emphasis> of a large patient database for
                        patients that match a certain clinical profile based on inclusion and
                        exclusion criteria. Examples include searches for patients eligible for a
                        prospective clinical trial, searches for patients whose data applies to a
                        case-control study, or searches for patients with chronic diseases who have
                        not received needed interventions.</para>
                </listitem>
                <listitem>
                    <para>Analysis of a large patient database to create <emphasis role="bold"
                            >statistical abstractions</emphasis> that are useful for clinical,
                        operational, research and business purposes. Examples include the
                        calculation of clinical quality measures to identify variations across the
                        enterprise, the determination of case mix to help operational planning or
                        insurance contracting, and the statistical analysis of electronic medical
                        records to test research hypotheses.</para>
                </listitem>
            </orderedlist>
            <para>These use cases suggest a number of specific requirements for the persistence and
                subsumption testing of post-coordinated observation expressions:</para>
            <itemizedlist>
                <listitem>
                    <para>The persisted representation(s) must support complete, accurate, and
                        familiar display of recorded observations to human users. The typical user
                        is a busy professional whose time is valuable and who needs to review a
                        medical record quickly.</para>
                </listitem>
                <listitem>
                    <para>Automated decision support in the context of a specific patient’s medical
                        record often must occur in real time, but it does not entail a large volume
                        of data. Given the limited data volume, the performance requirements for
                        each subsumption test are not as great as when search or analysis over an
                        entire patient database are involved (See Section <xref
                            linkend="_Ref159994558"/>). However, the observation expressions must
                        support complete and correct inferences, because direct patient care is
                        often affected. </para>
                </listitem>
                <listitem>
                    <para>Search and statistical abstraction over large databases create special
                        performance requirements that may need to be addressed through the
                        transformations of operational data structures to (redundant) analytical
                        data structures and through hardware and/or software optimizations. </para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="_Ref159994558">
            <title>Performance Requirements</title>
            <para>A reasonable performance criterion for a pair-wise subsumption test is 10-20 ns. </para>
            <para>To consider the performance requirements related to subsumption testing of
                post-coordinated expressions, it is useful to consider the operations involved and
                the steps required to perform each operation.</para>
            <para>Automated decision support, search, and statistical abstraction all entail the
                following prototypical operation in a patient medical record: Evaluation of a
                Boolean predicate (P) against the set of observations in the medical record (R). The
                evaluation may be as simple as</para>
            <para>P = Does R contain “myocardial infarction”?</para>
            <para>or as complex as</para>
            <para>P = Does L contain “history of myocardial infarction” or “myocardial infarction”
                and “status post CABG” but NOT “family history of coronary artery disease”?</para>
            <para>The evaluation of these expressions entails pair-wise subsumption testing between
                the concepts in the predicate and the concepts in the medical record. Subsumption
                testing is required (rather than testing of exact concept equivalence) because
                observations are recorded to varying degrees of detail. For example, one clinician
                may document “myocardial infarction”, another “acute myocardial infarction”, and a
                third “acute non-Q wave myocardial infarction.” Nevertheless, in all cases the
                patient has a type of “myocardial infarction,” and subsumption testing must
                correctly infer this.</para>
            <para>For a predicate containing N concepts and a medical record containing M concepts,
                as many as N x M subsumption tests are required to evaluate the predicate against
                the record (although in practice, certain logical optimizations can reduce the
                actual number of subsumption tests performed, depending on the formulation of the
                predicate and the contents of the record). In the typical case, one can presume that
                3 – 6 subsumption tests will be required to evaluate a predicate against each
                problem list in a medical record, although this may vary and should be further
                evaluated based on empirical data.</para>
            <para>Prior to each pair-wise-subsumption test, the persisted observation expression
                must “pre-processed” as follows:</para>
            <orderedlist>
                <listitem>
                    <para>The observation must be retrieved from the database (requiring one or more
                        disk reads and certain database manipulations, such as joins)</para>
                </listitem>
                <listitem>
                    <para>The observation must be loaded into program memory (which may require
                        parsing or data-type conversion)</para>
                </listitem>
                <listitem>
                    <para>The observation must be in a representation suitable for subsumption
                        testing (which may require normalization)</para>
                </listitem>
            </orderedlist>
            <para>The specific form in which post-coordinated observation expressions are persisted
                will affect the time required to pre-process the expressions. For example, storing
                the normalized form of an expression will eliminate the need for step 3 and storing
                a binary representation of the expression will reduce the time required for steps 1
                and 2.</para>
            <para>Lastly, the pair-wise subsumption test is performed by the appropriate algorithm.
                For pre-coordinated concepts, the test may be as simple as a tree traversal or table
                lookup. For post-coordinated concepts, however, the test entails a logical analysis
                of the structure of each concept in the context of the entire terminology. Depending
                on the complexity of the expressions being tested and the size of the terminology,
                subsumption testing of post-coordinated expressions may be an expensive operation.
                Depending on the performance achieved by the vendor’s terminology engine, certain
                optimizations may be considered (See Sections <xref linkend="_Ref161759449"/> -
                    <xref linkend="_Ref161820658"/>). </para>
        </section>
        <section>
            <title>Medicolegal Requirements</title>
            <para>Legal requirements governing medical records vary by state. However, most states
                require the attestation of patient care entries by the responsible author (typically
                via signature). Attestation confirms that the author is the source of the entries
                and is taking responsibility for the accuracy of the content. Additionally, state
                law typically prohibits the subsequent modification of a patient care entry without
                further attestation of the change in such a way that the original entry is
                preserved.</para>
            <para>Given these requirements, it is important that any system for documenting
                observations capture and retain not only a structured internal representation of the
                observations (no matter how useful these may be for computer-based processing), but
                also the specific textual rendition that the user entered, viewed, and attested to.
                Features or operations that change or delete this textual rendition without the
                knowledge and further attestation of the user present potential medicolegal risks.
                For example, a change to the text rendition of an observation caused by an update to
                the SCT terminology (such as the designation of a different preferred term) could
                potentially create medicolegal problems. At the same time, features and operations
                that transform, normalize, or abbreviate the structured
                    <emphasis>internal</emphasis> representation of a patient care entry for
                purposes of technical optimization are presumably acceptable, provided that they do
                not alter the representation’s meaning such that it no longer corresponds to the
                textual rendition that the user attested to.</para>
        </section>
        <section>
            <title>Terminology-Versioning Requirements</title>
            <para>The SCT terminology is regularly updated, through both local additions and
                periodic maintenance releases from the SNOMED authority. Such updates may occur as
                frequently as several times per year, and each update may entail a significant
                number of content additions and changes. Whatever design decisions are made with
                respect to the representation of post-coordinated observation expressions and the
                performance of subsumption testing, the following conditions must be met:</para>
            <itemizedlist>
                <listitem>
                    <para>Terminology updates may require no <emphasis>manual</emphasis> review or
                        editing of patient-specific data (i.e., individual patient
                        observations).</para>
                </listitem>
                <listitem>
                    <para>Terminology updates may require no <emphasis>manual</emphasis> review or
                        editing of application code, including queries used in decision-support
                        logic or reporting.</para>
                </listitem>
            </itemizedlist>
            <para>Note that these conditions do not preclude the <emphasis>automated</emphasis>
                review and editing of patient data and/or application code, provided that such
                operations can be performed efficiently and reliably. For example, a terminology
                update may necessitate certain formatting changes to data in patient records,
                provided that such changes can be performed automatically and without risk of
                corrupting clinical data.</para>
        </section>
    </section>
    <section>
        <title>Options for Persistence and Management of Post-Coordinated Observations</title>
        <para>This section addresses a variety of design decisions that must be made to implement
            persistence and subsumption testing for post-coordinated SCT expressions. Each
            sub-section describes a design dimension, presents a set of relevant options, and lists
            the advantages and disadvantages of each option. Specific recommendations regarding each
            design decision are presented in Section <xref linkend="_Ref161828434"/>.</para>
        <para>The selection of options and the evaluation of their pros and cons was developed in
            the context of the requirements and assumptions, as well as available literature on
            post-coordinated expressions and subsumption testing using SNOMED-CT.</para>
        <section>
            <title>Abstract Models and Normalization</title>
            <para>The logical underpinnings of the SCT terminology model allow SCT expressions
                (including single concepts) to be represented in a number of different but
                semantically equivalent forms (also known as “abstract models” in the SNOMED
                parlance). For example, the following two expressions of an observation are
                semantically equivalent:</para>
            <para>Close-to-User Form: Fracture of Femur </para>
            <para><emphasis>Long Normal Form: </emphasis>Disease : Associated Morphology = Fracture
                Finding Site = Bone Structure of Femur </para>
            <para>The question arises as to which form or forms of an observation should be
                persisted in the patient record. Different forms of an expression are best suited
                for different purposes and operations. For example, the <emphasis>Close-to-User
                    Form</emphasis> represents the expression as it was initially created by the
                user. This form is typically concise and documents the exact expression that the
                clinician specified. The <emphasis>Long Normal Form</emphasis> represents a
                transformation of the close-to-user form to a normalized form needed for subsumption
                testing. </para>
            <para>Transformations among semantically equivalent forms are made possible by the
                logical definitions of concepts and the hierarchical relationships among concepts in
                the SCT terminology. Importantly, the transformation of an expression from one form
                to another can yield different results after the contents of the SCT terminology
                change. For example, if a relationship is added to the definition of a concept or a
                new concept is added to the SCT hierarchy, the normalized form of an expression may
                change.</para>
            <section xml:id="_Ref160162018">
                <title> Definitions</title>
                <para>Close-to-User Form: The SCT expression as specified by the user or as encoded
                    by a clinical application to represent the semantics of a single clinical
                    observation.</para>
                <para>The close-to-user form of an expression is the most faithful and unchanging
                    representation of the information entered. Some experts believe that, for
                    clinical safety and accountability purposes, this should be regarded as the
                    primary stored and communicated form of clinical information encoded using
                    SCT.</para>
                <para><emphasis>Example: </emphasis>Allergic Asthma : Course = Chronic</para>
                <para><emphasis role="underline">Short Normal Form</emphasis>: The normalized form
                    of the SCT expression that is most efficient when the expression appears as the
                        <emphasis>Predicate </emphasis>in a subsumption test. In practice, this is
                    the form that would typically appear in database queries seeking patients with
                    specific kinds of observations or combinations of observations. Technically, the
                    Short Normal Forms contains only non-redundant relationships that appear in the
                    definition or refinement of the expression.</para>
                <para><emphasis>Example:</emphasis> Asthma : Due To = Allergic Reaction, Course =
                    Chronic</para>
                <para><emphasis role="underline">Long Normal Form</emphasis>: The normalized form of
                    the SCT expression that is most efficient when the expression appears as the
                        <emphasis>Candidate </emphasis>in a subsumption test. In practice, this is
                    the form that would typically appear in the patient’s record. Technically, the
                    Long Normal Forms contains all relationships that appear in the definition or
                    refinement of the expression, whether redundant or not.</para>
                <para><emphasis>Example:</emphasis> Asthma : Due To = Allergic Reaction, Associated
                    Morphology = Obstruction, Finding Site = Bronchial Structure, Course =
                    Chronic</para>
                <para><emphasis role="underline">Canonical Form:</emphasis> (short or long): The
                    normalized form that is needed when an expression is used in an equivalence
                    test. The Canonical form is the same as the Short or Long normalized form,
                    except that the exact syntactic representation and sequence of relationships are
                    standardized so that text representation of two equivalent expressions will be
                    lexicographically identical. The process for testing equivalence between two
                    expressions entails transforming both to their canonical normalized forms and
                    testing whether the resulting strings are identical.</para>
                <para><emphasis>Example:</emphasis> 195967001 | asthma | : 116676008 | associated
                    morphology | = 26036001 | obstruction | ,260908002 | course | = 191268006 |
                    chronic ,42752001 | due to | = 419076005 | allergic reaction | ,363698007 |
                    finding site | = 955009 | bronchial structure |</para>
                <para>(Note that all descriptions have been normalized to lower-case text, and the
                    sequence of relationships has been normalized to alphabetical)</para>
                <para><emphasis role="underline">Text-Rendered Form</emphasis>: The text string that
                    appears in the patient record to represent the Close-to-User form of an SCT
                    expression. This form is relevant when a clinical application renders
                    post-coordinated expressions differently than they appear in the SCT syntax.
                    Such rendering may be needed to display an intuitive, human-readable form of the
                    expression. Note: This form is not part of the SNOMED model.</para>
                <para><emphasis>Example: </emphasis>Allergic Asthma, Chronic </para>
                <para>(Text rendering of the Close-to-user form “Allergic Asthma : Course =
                    Chronic”)</para>
            </section>
            <section>
                <title>Options</title>
                <para>The following table summarizes which forms are persisted in each of the
                    options described:</para>
                <informaltable>
                    <tgroup cols="6">
                        <colspec colname="c1" colwidth="13*"/>
                        <colspec colname="c2" colwidth="17*"/>
                        <colspec colname="c3" colwidth="17*"/>
                        <colspec colname="c4" colwidth="17*"/>
                        <colspec colname="c5" colwidth="17*"/>
                        <colspec colname="c6" colwidth="18*"/>
                        <tbody valign="top">
                            <row>
                                <entry align="center"><para><emphasis role="bold"
                                        >Option</emphasis></para></entry>
                                <entry align="center"><para><emphasis role="bold"
                                            >Close-to-User</emphasis></para></entry>
                                <entry align="center"><para><emphasis role="bold"
                                            >Short-Normal</emphasis></para></entry>
                                <entry align="center"><para><emphasis role="bold"
                                            >Long-Normal</emphasis></para></entry>
                                <entry align="center"><para><emphasis role="bold"
                                            >Canonical</emphasis></para></entry>
                                <entry align="center"><para><emphasis role="bold"
                                            >Text-Rendered</emphasis></para></entry>
                            </row>
                            <row>
                                <entry align="center"><para><emphasis role="bold"
                                        >1</emphasis></para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"/>
                            </row>
                            <row>
                                <entry align="center"><para><emphasis role="bold"
                                        >2</emphasis></para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"/>
                            </row>
                            <row>
                                <entry align="center"><para><emphasis role="bold"
                                        >3</emphasis></para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"/>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                            </row>
                            <row>
                                <entry align="center"><para><emphasis role="bold"
                                        >4</emphasis></para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                                <entry align="center" valign="middle"><para>XXX</para></entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Option 1. Store the Close-to-User form only.</emphasis>
                    This form must be stored at a minimum, because it is required to derive all
                    other forms. Also, this form should be stored because it represents the concept
                    that the clinician directly specified as the observation. When displaying
                    observations, dynamically transform the Close-to-User form to the Text-Rendered
                    Form (may either be done in the terminology server, or by the client
                    application). When performing subsumption testing against observations,
                    dynamically transform all expressions to their Long Normalized Forms prior to
                    executing the test. When performing equivalence testing involving observations,
                    dynamically transform all expressions to the Canonical Forms. When performing
                    subsumption testing with observations as the Predicate Expressions, dynamically
                    transform them to the Short Normal Forms.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Most disk-space efficient</para>
                    </listitem>
                    <listitem>
                        <para>No need to recompute Long Normal Forms across entire database when the
                            SCT terminology is versioned</para>
                    </listitem>
                    <listitem>
                        <para>Ability for client applications or terminology services to change the
                            text-rendering behavior without needing to recompute Text-Rendered Form
                            across entire database</para>
                    </listitem>
                    <listitem>
                        <para>Equivalence testing (which requires the Canonical Form) is
                            infrequently performed on patient data -- subsumption testing is the
                            more common operation.</para>
                    </listitem>
                    <listitem>
                        <para>Use of patient data as the Predicate Expression (which benefits from
                            the Short Normal Form) is uncommon – patient data is more commonly used
                            as the candidate expression.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Expressions must be transformed to their Long Normal Forms each time a
                            subsumption test is performed on them, which may slow subsumption
                            testing significantly. Subsumption testing against patient observations
                            will be a frequent operation.</para>
                    </listitem>
                    <listitem>
                        <para>The Text-Rendered form displayed to the clinician who entered the
                            observation and subsequently to all clinicians who view the medical
                            record is not statically persisted. If the text-rendering behavior of
                            software is changed, the contents of the patient record, as seen by
                            clinicians, may effectively change.</para>
                    </listitem>
                </itemizedlist>
                <para><emphasis role="bold">Option 2. Store the Close-to-User form and the Long
                        Normal Form only.</emphasis> Dynamically generate the other forms when
                    needed.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Relatively disk-space efficient</para>
                    </listitem>
                    <listitem>
                        <para>Long Normal Form of each expression is immediately available as a
                            candidate expression, improving performance of subsumption
                            testing</para>
                    </listitem>
                    <listitem>
                        <para>The terminology server can immediately test whether a Close-to-User
                            form may be unambiguously transformed to a Long Normal Form, and prompt
                            the calling application for more information if an unambiguous
                            transformation does not exist.</para>
                    </listitem>
                    <listitem>
                        <para>Ability for client applications or terminology services to change the
                            text-rendering behavior without needing to recompute Text-Rendered Form
                            across entire database</para>
                    </listitem>
                    <listitem>
                        <para>Equivalence testing (which requires the Canonical Form) and use of
                            observations as Predicate expressions in subsumption tests are
                            infrequent, so not persisting these forms is acceptable.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Need to compute Long Normal Form at the time observations are stored,
                            which will impact the documentation of observations in a synchronous
                            system.</para>
                    </listitem>
                    <listitem>
                        <para>Need to recompute Long Normal Forms across entire database when the
                            SCT terminology is versioned.</para>
                    </listitem>
                    <listitem>
                        <para>Volatility of Text-Rendered Form displayed to users if/when the
                            text-rendering algorithms change.</para>
                    </listitem>
                </itemizedlist>
                <para><emphasis role="bold">Option 3. Store the Close-to-User form, the
                        Text-Rendered Form, and the Long Normal Form.</emphasis> Dynamically
                    generate the Short Normal Form and Canonical Forms when needed.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>A persistent Text-Rendered form is more consistent with medicolegal
                            standards for the patient record. Improved performance for the display
                            of the Text-Rendered Form of observations, because it does not need to
                            be generated dynamically for each display. No performance impact on
                            entry of new observations, because the Text-Rendered form must be
                            computed synchronously anyway. </para>
                    </listitem>
                    <listitem>
                        <para>Long Normal Form of each expression is immediately available as
                            candidate expression, and the ability to convert to Long Normal Form can
                            be verified in real time.</para>
                    </listitem>
                    <listitem>
                        <para>Equivalence testing (which requires the Canonical Form) and use of
                            observations as the Predicate expression in subsumption tests are
                            infrequent.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Need to recompute Long Normal Forms across entire database when the
                            SCT terminology is versioned.</para>
                    </listitem>
                    <listitem>
                        <para>Possibly need to recompute Text-Rendered Form across entire database
                            if/when the text-rendering algorithms change (although these forms may
                            remain unchanged for medicolegal purposes).</para>
                    </listitem>
                </itemizedlist>
                <para><emphasis role="bold">Option 4. Store all forms</emphasis>. Generate and store
                    all forms immediately. Recompute relevant forms across the entire database when
                    the SCT terminology or text-rendering algorithms are updated.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>A persistent Text-Rendered form is more consistent with medicolegal
                            standards for the patient record, with no detriment to
                            performance.</para>
                    </listitem>
                    <listitem>
                        <para>Forms for subsumption testing and equivalence testing are immediately
                            available, maximizing performance of these operations.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Least disk-space efficient. Redundant storage of forms that are
                            semantically equivalent and can be derived from a single
                            representation.</para>
                    </listitem>
                    <listitem>
                        <para>Need to recompute Text-Rendered Form across the entire database
                            if/when the text-rendering algorithms change. </para>
                    </listitem>
                    <listitem>
                        <para>Need to recompute Long Normal Form, Short Normal Form, and Canonical
                            Form across entire database when the SCT terminology is
                            versioned.</para>
                    </listitem>
                </itemizedlist>
            </section>
        </section>
        <section xml:id="_Ref161817243">
            <title>Structure and Syntax for Persistence</title>
            <para>It is possible to store any given abstract model of a post-coordinated expression
                in a number of structural and syntactical ways within a database. These alternative
                representations are known as “representational forms” in the SNOMED parlance. For
                example, one could represent a post-coordinated expression (Close-to-User form) such
                as</para>
            <para>Fracture of Femur : Finding Site = Structure of Head of Femur : </para>
            <para> Laterality = Left, </para>
            <para> Morphology = Spiral Fracture,</para>
            <para> Severity = Severe</para>
            <para>in a single relational database field as a text string with delimiters:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image3.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
            <para>Alternatively, one could represent the same expression (Close-to-User form) as a
                set of associated rows in a relational database table:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image4.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
            <para>If a Caché hierarchical database is used, the same expression could be stored as a
                single text data value:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image5.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
            <para>Alternatively, the expression could be stored as a set of data elements in a
                structured hierarchical tree:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image6.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
            <para>An application could retrieve and correctly process any of these representations.
                The selection of representational forms for post-coordinated observation expressions
                impacts the following properties of an information system:</para>
            <itemizedlist>
                <listitem>
                    <para>Storage and retrieval performance</para>
                </listitem>
                <listitem>
                    <para>Processing performance (i.e., subsumption testing)</para>
                </listitem>
                <listitem>
                    <para>Interoperability</para>
                </listitem>
                <listitem>
                    <para>Development and maintenance costs</para>
                </listitem>
            </itemizedlist>
            <para>This section analyzes options regarding representational forms for the medical
                record system in the context of the functional requirements in Section <xref
                    linkend="_Ref162029866"/> The discussion first addresses representation in a
                relational database, and then covers representation in an object-oriented database
                (such as Caché).</para>
            <section xml:id="_Ref157232237">
                <title>SNOMED Compositional Grammar</title>
                <para>The SNOMED compositional grammar is a BNF grammar developed by the SNOMED
                    authority to represent SCT expressions as single, parse-able text
                        strings<footnote xml:id="__FN1__">
                        <para>The complete BNF grammar is specified in
                            http://www.snomed.org/snomedct/documents/abstract_models_and_representational_forms.pdf</para>
                    </footnote>. An example observation expression represented in the compositional
                    grammar is:</para>
                <para><literal>7162000|Fracture of Femur|:{363698007|Finding Site|=2812003|Structure
                        of Head of
                        Femur|:2727410003|Laterality|=7771000|Left|},116676008|Morphology|=
                        73737008|Fracture,
                    Spiral|,246112005|Severity|=24484000|Severe</literal></para>
                <para>The grammar specifies that each SCT concept and attribute within an expression
                    is represented by its concept ID and (optionally) a text description. The
                    relationships among concepts are specified by the appropriate positioning of
                    reserved-character delimiters (specifically, the set “ : = , { } ( ) | ”
                    ).</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Concise (especially if text descriptions are omitted)</para>
                    </listitem>
                    <listitem>
                        <para>Efficient retrieval - allows an entire concept to be retrieved with a
                            read operation on a single field of a single relational table (if a
                            relational database is used); requires no relational joins to retrieve
                            an entire concept, regardless of its size or complexity</para>
                    </listitem>
                    <listitem>
                        <para>Efficient storage – allows an entire concept to be persisted with a
                            write operation to a single field of a single relational table or to a
                            single array cell in a hierarchical database.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>No logical operations are possible on observation expressions as they
                            appear in the database. Specifically, SQL-based or ObjectScript-based
                            searches of the database for specific SCT observations or observation
                            attributes are not possible. All such searching must be done outside of
                            the database within middleware that is capable of parsing and processing
                            SCT expressions. Such additional middleware will have to be purchased or
                            developed (Note: Given the need for subsumption testing, an operation
                            not supported by any commercial relational database engine, such
                            additional middleware will need to be procured regardless of the
                            representational form in which observations are persisted.).</para>
                    </listitem>
                    <listitem>
                        <para>No logical operations are possible on observation expressions until a
                            processing engine parses the expressions and constructs corresponding
                            in-memory data structures. The performance of queries against large data
                            sets (e.g., for quality reporting or clinical research) will be
                            negatively impacted by this requirement, and even real-time queries
                            against smaller data sets (e.g., for decision support rules) may be
                            prohibitively slowed. An alternative approach would be to store the
                                <emphasis>binary images</emphasis> (“BLOBs”) of observation
                            expressions (as defined by the proprietary software systems that will
                            process those expressions). This approach would obviate the need to
                            parse the expressions and algorithmically build corresponding data
                            structures. The value of such an approach depends on the processing time
                            required to construct in-memory data structures from the SNOMED
                            compositional grammar relative to the time required to perform
                            subsumption testing subsequent to the construction of the data
                            structures. If the time required for subsumption testing dwarfs the time
                            required to construct the data structures, the storage of binary images
                            may not be worthwhile (given the potential maintenance costs – see
                            discussion of binary images below). </para>
                    </listitem>
                    <listitem>
                        <para>The syntax of the compositional grammar is not an industry standard
                            (unlike XML – see below), so that few if any commercial tools exist for
                            parsing compositional grammar expressions and building/processing the
                            in-memory data structures that such parsing generates. </para>
                    </listitem>
                    <listitem>
                        <para>The expressions offer minimal human readability (especially if text
                            descriptions are omitted). Although expressions rendered in the
                            compositional grammar will never be displayed to clinician users,
                            programmers and analysts may wish to review them for debugging
                            purposes.</para>
                    </listitem>
                </itemizedlist>
                <para><emphasis role="bold">Note</emphasis>: The SNOMED compositional grammar is
                    relatively new and currently used for demonstration purposes only. Specifically,
                    it is not an industry standard that is supported by commercial tools and it may
                    be subject to change as experience with it increases. Therefore, if PHS chooses
                    to use a compositional grammar to represent observation expressions, it could
                    modify the SNOMED compositional grammar to better meet its needs. For example,
                    the PHS compositional grammar could require concepts to be represented using HLE
                    GUIDs in addition to or instead of SNOMED Concept IDs. Also, any errors or
                    omissions in the grammar that PHS uncovers could be addressed without the need
                    to maintain consistency with the “official” SNOMED compositional grammar.</para>
            </section>
            <section>
                <title>HL7 CD Data type (XML)</title>
                <para>The HL7 Concept Descriptor (CD) data type is a model developed within HL7
                    version 3.0 for representing concept expressions. Instances of the CD data type
                    are rendered as XML expressions consistent with a defined XML schema. The XML
                    schema for the HL7 CD data type is very similar to the SNOMED concept grammar,
                    with the following exceptions: (1) The HL7 CD data type specifies that concept
                    expressions are rendered as standard XML elements, and (2) the HL7 CD data type
                    does not allow multiple SCT concepts to be combined as the top-level focus
                    concept of a concept expression (e.g., “Fracture of Tibia” + “Fracture of
                    Fibula”). </para>
                <para>For example, the same post-coordinated expression shown in Section <xref
                        linkend="_Ref157232237"/> is rendered in the HL7 CD data type as
                    follows:</para>
                <para><literal>&lt;code codeSystem="2.16.840.1.113883.6.96" code="7162000"
                        displayName=" Fracture of Femur"&gt;</literal></para>
                <para><literal> &lt;qualifier&gt;</literal></para>
                <para><literal> &lt;name code="363698007" displayName="Finding
                    Site"/&gt;</literal></para>
                <para><literal> &lt;value code="2812003" displayName="Structure of Head of
                        Femur"&gt;</literal></para>
                <para><literal>&lt;qualifier&gt;</literal></para>
                <para><literal>&lt;name code="2727410003"
                    displayName="Laterality"/&gt;</literal></para>
                <para><literal>&lt;value code="7771000" displayName="Left"/&gt;</literal></para>
                <para><literal>&lt;/qualifier&gt;</literal></para>
                <para><literal> &lt;/qualifier&gt;</literal></para>
                <para><literal> &lt;qualifier&gt;</literal></para>
                <para><literal>&lt;name code="116676008"
                    displayName="Morphology"/&gt;</literal></para>
                <para><literal>&lt;value code="73737008" displayName="Fracture,
                        Spiral"&gt;</literal></para>
                <para><literal> &lt;/qualifier&gt;</literal></para>
                <para><literal> &lt;qualifier&gt;</literal></para>
                <para><literal>&lt;name code="246112005"
                    displayName="Severity"/&gt;</literal></para>
                <para><literal>&lt;value code="24484000" displayName="Severe"/&gt;</literal></para>
                <para><literal> &lt;/qualifier&gt;</literal></para>
                <para><literal>&lt;/code&gt;</literal></para>
                <para>Whether a relational or hierarchical database is used, the HL7 CD datatype
                    could represent post-coordinated expressions as an alternative to the SNOMED
                    compositional grammar.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>HL7 CD renderings of SCT expressions are also single, discrete text
                            strings. Hence, the same benefits exists with regards to retrieval and
                            storage performance as do in using the SNOMED compositional
                            grammar.</para>
                    </listitem>
                    <listitem>
                        <para>Relative to the SNOMED compositional grammar, certain logical
                            operations on observation expressions may be possible within the
                            database management system. Specifically, a number of commercial DBMSs
                            now include facilities to query within data elements that are XML-typed.
                            For example, an SQL query could retrieve all observations that are
                            severe by including the selection criterion “…WHERE
                            observation.code.qualifier.name.displayName= “Severity” and
                            observation.code.qualifier.value.displayName= “Severe”). (Although I do
                            not believe that Caché currently supports such operations.)</para>
                    </listitem>
                    <listitem>
                        <para>Use of standard XML allows application developers to leverage many
                            open-source and commercially available resources for generating,
                            parsing, validating, and processing XML data. The task of developing and
                            maintaining interfaces between patient databases and the
                            decision-support and analytical tools that process patient data would be
                            somewhat reduced if a representation based on XML were used.</para>
                    </listitem>
                    <listitem>
                        <para>A representational form based on HL7 is the most likely to emerge as
                            an industry standard. If SCT, itself, is widely adopted, then a thriving
                            market of tools might appear for processing patient data encoded in the
                            HL7 CD data type, which would give PHS more product choices for
                            querying, analyzing, and displaying the medical record data already
                            persisted in its patient databases. Additionally, the HL7 CD data type
                            is consistent with the HL7 v3.0 messaging model. If and when v3.0
                            messaging is widely supported, the representation of observations as CD
                            data types would allow PHS to exchange medical record data seamlessly
                            among its own applications and applications at other institutions.
                                <emphasis role="bold">Note</emphasis>: Adoption of v3.0 is probably
                            a long way off in the United States, however.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>XML is significantly more verbose and less disk-space efficient than
                            the SNOMED compositional grammar. The post-coordinated “Fracture of
                            Femur” expression required 200 characters to encode in the SNOMED
                            compositional grammar, but 590 characters in the HL7 CD data type. Even
                            a simple expression consisting of a single SCT concept (such as
                            “Pneumonia”) requires 85 characters in the HL7 CD rendition, while only
                            22 in the SNOMED compositional grammar.</para>
                    </listitem>
                    <listitem>
                        <para>Although ostensibly a standard, the XML schema for the HL7 CD data
                            type may need to change in response to extensions to the SCT terminology
                            model. For example, the incorporation of Facets into the SCT model would
                            require the addition of a new XML tag to the CD data type to fully
                            represent the facets of SCT expressions. Coordination between HL7 and
                            SNOMED would then be required to allow SCT users to leverage extensions
                            to the SCT model within their HL7-compliant applications.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section xml:id="_Ref157241053">
                <title>Proprietary Binary Representation</title>
                <para>A third way of representing SCT expressions as single, discrete data elements
                    entails storing <emphasis>binary images</emphasis> of the concept expressions.
                    The binary images are serialized renditions of in-memory data structures, as
                    defined by a specific application or a set of applications that share a specific
                    data type (for example, the LE middleware). Most modern relational DBMSs as well
                    as Caché can store binary images in BLOB-typed fields. Applications can retrieve
                    the values of BLOB-typed fields and immediately convert the data into
                    appropriate internal data structures by de-serializing it (i.e., without the
                    need to parse any text expressions). This mode of writing and reading binary
                    observation expressions via serialization and de-serialization (respectively) is
                    typically much more efficient than generating and parsing structured text
                    strings.</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Significantly improved performance in moving SCT concept expressions
                            between the applications that create and process them and the databases
                            that persist and share them. The performance will be superior even to
                            representational forms that persist concept expressions as text-encoded
                            strings in individual database fields (such as XML or SNOMED
                            compositional grammar). If the parsing of XML or compositional-grammar
                            expressions is prohibitively expensive for certain types of queries
                            (such as searches across an entire database), this approach may be
                            required.</para>
                    </listitem>
                    <listitem>
                        <para>Somewhat reduced disk-space requirements for storing observation
                            expressions.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Significantly increased maintenance burden because any changes to the
                            definitions of data structures used by applications to internally
                            represent SCT observation expressions (including very minor changes with
                            no semantic significance) will necessitate a conversion of all persisted
                            observation expressions across the entire database.</para>
                    </listitem>
                    <listitem>
                        <para>No ability whatsoever to perform logical operations on observation
                            expressions as they appear in the database. The binary images of these
                            expressions are wholly opaque to SQL or Caché ObjectScript, and any
                            processing first requires retrieval and de-serialization by an
                            application that has implemented the appropriate data type.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>Relational Decomposition</title>
                <para>If a relational database is used, an alternative general approach for
                    persisting an observation expression entails decomposing the expression into a
                    set of relational fields and/or relational rows (as opposed to storing the
                    expressions within a single relational field, as proposed in Sections <xref
                        linkend="_Ref157232237"/> - <xref linkend="_Ref157241053"/>). </para>
                <para>Relational decomposition offers the advantage of exposing SCT observation
                    expressions to database processing, i.e., to selective retrieval and analysis
                    using SQL commands. For example, storing the focus concept of an observation
                    expression in a designated field (distinct from any refinements, which are
                    stored in other fields) allows one to retrieve only the focus concept and
                    compare it to a target SCT concept via subsumption testing. This operation is
                    less costly than general-purpose subsumption testing, because both the focus
                    concept and the target concept are pre-coordinated concepts. Where the target
                    concept is very general (such as “respiratory disease”) and the focus concept is
                    derived from the close-to-user form (which is typically a relatively specific
                    concept), comparison against the focus concept alone will yield accurate results
                    in most cases. Consideration of the refinements is not needed. Note: The focus
                    concept in the <emphasis>Close-to-User</emphasis> form must be used for such
                    comparisons, because the focus concept in the Long Normal Form may frequently be
                    very general – e.g., “disease”.</para>
                <para>The decomposition of observation expressions into relational fields may be
                    done in two general ways – Unrestricted and Restricted decomposition.</para>
                <section>
                    <title>Unrestricted Decomposition</title>
                    <para>Unrestricted relational decomposition is the most flexible approach,
                        allowing a concept refinement to contain any combination of attributes and
                        values to any potential depth. The following table shows the “Fracture of
                        Femur” example represented in an unrestricted way using an
                        “object-attribute-value” table:</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                    fileref="images/image4.png"
                                    width="5.5in"/>
                            </imageobject>
                        </inlinemediaobject></para>
                    <para>Note that the field names are entirely generic, and the semantics of the
                        expression is entirely conveyed by field values and by the structure
                        imparted through the foreign key “ParentInstanceID”. </para>
                    <para>PROS:</para>
                    <itemizedlist>
                        <listitem>
                            <para>Expressivity – any SCT expression can be represented in this
                                format, regardless of the number or depth of its refining
                                attributes.</para>
                        </listitem>
                        <listitem>
                            <para>Generality – The unrestricted format is relatively resilient to
                                changes in the SNOMED terminology content. For example, if
                                additional attributes are added, the database schema need not be
                                changed. The SCT_AttributeID and SCT_AttributeDesc fields are
                                already capable of storing any SNOMED attribute. If multiple values
                                for certain attributes become allowed, the database schema already
                                supports that as well. (Note: For simplicity, the table structure
                                cannot represent Relationship Groups, but this construct could be
                                supported with the addition of a single field).</para>
                        </listitem>
                        <listitem>
                            <para>Referential integrity – The highly granular decomposition allows
                                concept that may appear within multiple observation expressions to
                                be represented as single instances (with multiple references). A
                                unique instance of a concept guarantees that only one version exists
                                in the database. Conversely, if a concept is duplicated across a
                                database within each observation expression in which it appears, the
                                potential is created that instances of the concept may become
                                inconsistent if any changes are made to some but not all of them. In
                                practice, however, this is not a concern for concepts that appear
                                within SCT observation expressions. This is because the
                                pre-coordinated concepts that appear in such expressions already
                                have referential integrity, because they exist solely within the SCT
                                terminology model (only references to these concepts, consisting of
                                concept identifiers and perhaps text descriptions, appear within the
                                post-coordinated observation expressions). The complex, structured
                                concepts that appear in SCT observation expressions (i.e.,
                                sub-expressions, such as “Structure of head of Femur: Laterality =
                                Left”) need not have referential integrity, because such concepts
                                are all individual instances of observations and may be different in
                                each observation expression in which they appear. Therefore,
                                referential integrity is, in fact, not an advantage of persisting
                                SCT observation expressions in an unrestricted relational
                                form.</para>
                        </listitem>
                    </itemizedlist>
                    <para>CONS:</para>
                    <itemizedlist>
                        <listitem>
                            <para>Poor retrieval performance – the retrieval of a single
                                post-coordinated expression might require a large number of
                                relational joins, depending on the depth to which the attributes
                                extend. In the example above, two joins would be required to
                                retrieve the attributes of “Fracture of Femur”, and then the
                                “Laterality” attribute for “Structure of Head of Femur.”</para>
                        </listitem>
                        <listitem>
                            <para>Poor storage performance – complex expressions need to be
                                decomposed into individual attribute/value pairs, which are
                                separately inserted in the database field (along with the
                                appropriate foreign key references). Indexes on the “InstanceID” and
                                “ParentInstanceID” must be updated for each row entered.</para>
                        </listitem>
                        <listitem>
                            <para>Need for non-SQL support – Because post-coordinated expressions
                                may be defined to an arbitrary depth of attributes, an arbitrary
                                number of relational joins may be required to retrieve such
                                expressions. Hence, SQL alone cannot be used to specify the queries
                                required to retrieve such expressions. Either database stored
                                procedures or programs external to the database are required to
                                retrieve post-coordinated expressions stored in an unrestricted
                                relational form (both of which offer poorer performance than SQL
                                queries alone, which can be better optimized). Although in practice,
                                most clinical observations specified as post-coordinated expressions
                                will not extend beyond two or three levels, the normalized forms of
                                these expressions may nest more deeply. </para>
                        </listitem>
                    </itemizedlist>
                </section>
                <section>
                    <title>Restricted Decomposition</title>
                    <para>Restricted relational decompositions entail table structures in which the
                        values of attributes are represented in specific, dedicated fields. The
                        model is “restricted” in the sense that the full set of attributes that are
                        supported are pre-defined in the relational schema, and other attributes or
                        arbitrary nesting of attributes are not supported. The following table shows
                        the “Fracture of Femur” example encoded in a restricted relational
                        schema.</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                    fileref="images/image7.png"
                                    width="5.5in"/>
                            </imageobject>
                        </inlinemediaobject>
                    </para>
                    <para>Note that the focus concept appears in the second field (“Problem Desc”),
                        and the values of various refinements appear in the following fields. Due to
                        space constraints, only the description of each concept is shown, although
                        the ConceptID would also be represented in a realistic example.</para>
                    <para>PROS:</para>
                    <itemizedlist>
                        <listitem>
                            <para>Retrieval performance – Entire post-coordinated expressions can be
                                retrieved without any relational joins, regardless of the number of
                                attributes or the depth of nesting (although not all of the
                                attributes or nesting specified by the user may be represented).
                            </para>
                        </listitem>
                        <listitem>
                            <para>Post-coordinated expressions can be retrieved using SQL queries
                                alone, without the need for stored procedures or programming
                                external to the database. </para>
                        </listitem>
                    </itemizedlist>
                    <para>CONS:</para>
                    <itemizedlist>
                        <listitem>
                            <para>Complexity – Given the number of different SCT concepts that may
                                appear as focus concepts in post-coordinated expressions, the set of
                                potential attributes that refine these concepts is large. The SCT
                                terminology model contains 50 different attributes, so up to 50
                                fields may be required in a restricted relational model to represent
                                the possible refinements that could appear in post-coordinated
                                observation expressions.</para>
                        </listitem>
                        <listitem>
                            <para>Brittleness – the relational schema must be changed each time an
                                attribute of interest is added to the SCT terminology model.</para>
                        </listitem>
                        <listitem>
                            <para>Sparseness – Given the variety of attributes that may be refined
                                for different types of observation concepts (findings, procedures,
                                observable entities, etc.), only a small subset of attributes will
                                have non-null values in any given post-coordinated expression (e.g.,
                                see the example table above). Most attributes will not be populated
                                because the user has not specified a value or because the attributes
                                are not relevant to the kind of observation specified (e.g., the
                                “Morphology” of a “Cholecystectomy”). The sparseness will create
                                inefficiencies when observation expressions are retrieved and
                                processed by applications, because each potential field in each
                                retrieved data row will have to be tested iteratively for a non-null
                                value (although the vast majority of the values will, in fact, be
                                null).</para>
                        </listitem>
                        <listitem>
                            <para>Relatively poor storage performance – complex expressions must be
                                decomposed into their constituent attribute/value pairs; the
                                attributes must be correctly mapped to the corresponding field names
                                in the table schema, and a correct SQL expression
                                constructed.</para>
                        </listitem>
                    </itemizedlist>
                </section>
            </section>
        </section>
        <section>
            <title>Representation of Context</title>
            <para>The observations in patients’ medical records frequently include <emphasis>context
                    qualifiers</emphasis>. These qualifiers add clinically important information
                about the meaning of a symptom, finding, test result, diagnosis, or procedure in the
                context of the patient’s medical treatment. The information that context qualifiers
                typically add includes:</para>
            <para><emphasis>If?</emphasis> Is this item definitely present, possibly present, or
                definitely absent? Should it be ruled out?</para>
            <para><emphasis>Who?</emphasis> Does this item pertain to the patient herself, or to a
                family member of the patient? </para>
            <para><emphasis>When?</emphasis> Is this item present now, was it present long ago or
                recently, will it be present in the future?</para>
            <para>As with the medical concepts that form the core of observation expressions, it is
                also important to represent context qualifiers in a formal and consistent way that
                is amenable to automated analysis. For example, a query may selectively seek
                patients who have active hepatitis rather than a past history of hepatitis, or
                patients who definitely have diabetes rather than suspected diabetes. There are a
                number of options for representing context based on the use of SCT and the existing
                PHS methodologies. </para>
            <section xml:id="_Ref161810950">
                <title>SNOMED Context Model</title>
                <para>The SNOMED context model provides a formal model for representing the context
                    of Findings and Procedures (including Findings and Procedures that appear as
                    focus concepts of post-coordinated expressions). The model is fully consistent
                    with the SCT terminology model and supports subsumption testing. The context
                    model in the current release of SCT can represent three context dimensions for
                    Findings and Procedures:</para>
                <para><emphasis role="underline">Findings </emphasis><emphasis>Finding
                        context</emphasis> [is the finding present, absent, possibly present?]
                        <emphasis>Temporal context</emphasis> [is the finding present now, was it
                    present in the past, both?] <emphasis>Subject relationship context</emphasis>
                    [does the finding pertain to the patient, to the patient’s family
                    member?]</para>
                <para><emphasis role="underline">Procedures</emphasis>
                    <emphasis>Action context</emphasis> [was the procedure already performed, is it
                    under consideration, is it planned?] <emphasis>Temporal context</emphasis> [was
                    the procedure performed in the past, is it being performed now?]
                        <emphasis>Subject relationship context</emphasis> [does the procedure
                    pertain to the patient, to the patient’s father, brother?]</para>
                <para>Context is added to findings and procedures by creating a <emphasis>context
                        wrapper</emphasis> for the finding or procedure. The context wrapper is a
                    concept expression, itself, with a focus concept of “Context Dependent Finding”
                    or “Context Dependent Procedure”. These expressions include a set of refinements
                    that specify the relevant finding or procedure, as well as its context values.
                    For example, the following concept expression denotes that the patient has a
                    confirmed mild tear of the right ACL ligament:</para>
                <para>Context-Dependent Finding :</para>
                <para> Finding Context = Definitely Present</para>
                <para> Temporal Context = Current</para>
                <para> Subject-Relationship Context = Subject of Record</para>
                <para> Associated Finding = Tear of Anterior Cruciate Ligament :</para>
                <para> Severity = Mild,</para>
                <para> Finding Site = Anterior Cruciate Ligament :</para>
                <para> Laterality = Right</para>
                <para>Representing context in this way in patients’ medical records supports
                    subsumption testing over the associated finding as well as the context
                    attributes. For example, the following predicate expression subsumes any
                    observation describing a definite or probable ACL tear in the patient at any
                    point, past or present:</para>
                <para>Context-Dependent Finding : Finding Context = <emphasis role="underline">Known
                        Present </emphasis> Temporal Context = <emphasis role="underline">Current or
                        Past</emphasis> Subject-Relationship Context = Subject of Record Associated
                    Finding = <emphasis role="underline">Tear of Anterior Cruciate
                        Ligament</emphasis></para>
                <para>This predicate expression above subsumes the post-coordinated observation
                    expression shown earlier because the concept “Known Present” subsumes
                    “Definitely Present” and the concept “Current or Past” subsumes “Current” in the
                    SCT terminology. The predicate expression would not, however, subsume a
                    context-dependent finding with a Finding Context of “Known Absent” or a
                    Subject-Relationship Context of “Person in the Family.”</para>
                <para><emphasis role="bold">Default Context</emphasis>: A feature of the SNOMED
                    Context model is that each context attribute is assigned a default value if no
                    value is explicitly specified. Therefore, a user need not specify a value for
                    each concept expression and the database need not store a value for each concept
                    expression if the intended values match the defaults. The default values for
                    Findings and Procedures are:</para>
                <para><emphasis role="underline">Context-Dependent Findings
                        </emphasis><emphasis>Finding context</emphasis> = Known Present
                        <emphasis>Temporal context</emphasis> = Current <emphasis>Subject
                        relationship context</emphasis> = Subject of Record</para>
                <para><emphasis role="underline">Context-Dependent Procedures</emphasis>
                    <emphasis>Procedure context</emphasis> = Done [actually, I’m unsure of this]
                        <emphasis>Temporal context</emphasis> = Current <emphasis>Subject
                        relationship context</emphasis> = Subject of Record</para>
                <para>By applying these defaults, the following context-dependent finding (as
                    specified by a user) would be subsumed by the predicate expression above:</para>
                <para>Context-Dependent Finding : Associated Finding = Tear of Anterior Cruciate
                    Ligament : Severity = Mild, Finding Site = Anterior Cruciate Ligament :
                    Laterality = Right</para>
                <para>Note that, without explicitly adding the default values for the unspecified
                    context attributes at the time that subsumption testing is performed, the
                    finding would not be subsumed by the predicate because the predicate would be
                    more specific.</para>
                <para>Use of the SNOMED context model entails the following advantages and
                    disadvantages:</para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Supports subsumption testing that involves context without need to
                            introduce any new subsumption-testing capabilities or content subsets.
                            For example, the standard subsumption-testing algorithms and existing
                            SCT concept hierarchy can already infer that the candidate expression
                            “Myocardial infarction, brother” is subsumed by the predicate expression
                            “Myocardial infarction, first-degree blood relative.”</para>
                    </listitem>
                    <listitem>
                        <para>The independent representation of the Finding context, Temporal
                            context, and Subject-Relationship context allows new post-coordinated
                            expressions to denote many combinations of context values without the
                            need to enumerate all possible combinations <emphasis>a
                                priori</emphasis>. For example, the current PHS context model would
                            require the addition of a new qualifier to represent the context “No
                            history of”, whereas the SNOMED context model could represent this
                            context with the combination of existing qualifiers: Finding Context =
                            “Known Absent” and Temporal Context = “Past.” </para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>The current SNOMED content may not represent all of the context
                            qualifiers that PHS requires. Specifically, the addition of a local
                            concept may be required to represent the “rule out” context.</para>
                    </listitem>
                    <listitem>
                        <para>The SNOMED context model is significantly more complex than the
                            existing PHS model, and users will not be able to understand and apply
                            it without a simplifying application layer. For example, user interfaces
                            should still allow clinicians to select and to view context qualifiers
                            such as “No family history,” with translation “behind the scenes” to the
                            appropriate SNOMED context representation (in this case, Finding Context
                            = “Known Absent” and Subject Relationship Context = “Person in the
                            Family”). </para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>Alternative SNOMED-based Context Model</title>
                <para>An alternative to the context model described above is a model that extends
                    the existing set of non-defining attributes for all Findings and all Procedures
                    in the SCT terminology model so that context can be represented simply as the
                    value of a new qualifier. This extension would entail the following changes to
                    the SCT terminology:</para>
                <para>New Attribute: “Observation Qualifier”</para>
                <para>New Concept sub-hierarchy:</para>
                <para> SNOMED CT Concept* Qualifier Value* Observation Qualifier Value Family
                    History of No Family History of Past History of Possibility of Rule Out Status
                    Post</para>
                <para>New Relationships (non-defining, refinable):</para>
                <para> Procedure*: Observation Qualifier = Observation Qualifier Value Clinical
                    Finding*: Observation Qualifier = Observation Qualifier Value Observable
                    Entity*: Observation Qualifier = Observation Qualifier Value</para>
                <para>(*Existing SCT concepts)</para>
                <para>Using this model, for example, “s/p emergency cholecystectomy” would be
                    represented as:</para>
                <para><literal>Cholecystectomy: Priority = Emergency, Observation Qualifier = Status
                        Post</literal></para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>A relatively simple model for querying observation expressions,
                            because queries would require evaluating a single straightforward
                            parameter rather than (possibly) a set of more obscure parameters. For
                            example, it is simpler to look for observations and procedures in a
                            patient’s past medical history by testing for observation expressions
                            with an Observation Qualifier = “Family History” than discerning which
                            specific value of the Temporal Context attribute applies (“Past”? “Past
                            Specified”? “Past Unspecified”? “Recent”?). </para>
                    </listitem>
                    <listitem>
                        <para>Supports some limited subsumption testing, specifically predicate
                            expressions that search for observations in a single concept category
                            with a single Observation Qualifier value. For example, the following
                            predicate expression, which matches any emergency procedure, would
                            logically subsume the representation of “s/p emergency cholecystectomy”
                            shown above:</para>
                    </listitem>
                </itemizedlist>
                <para><literal> Procedure: Priority = Emergency </literal></para>
                <para>However, predicate expressions cannot combine concepts using disjunctions
                    (“OR”) or negations (“NOT”). Therefore, this context model would not support a
                    predicate expression to search for any Clinical Finding, Observable Entity, or
                    Procedure that occurred in the present <emphasis>or</emphasis> the past.
                    Retrieving all such observations would require several subsumption tests. The
                    SNOMED Context model, in contrast, does support such a predicate expression
                    because a Temporal Context value of “current or past” exists:</para>
                <para>Context-Dependent Finding :</para>
                <para> Finding Context = Known Present</para>
                <para> Temporal Context = Current or Past</para>
                <para> Subject-Relationship Context = Subject of Record</para>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Because a single Observation Qualifier must represent all three
                            dimensions of context (current/past, present/absent, patient/family),
                            all of the relevant combinations must be enumerated as possible values
                            of Observation Qualifier. For example, the documentation that a patient
                            has “no history of” a disorder would necessitate the addition of a new
                            Observation Qualifier Value (“No History of”), whereas the SNOMED
                            context model could represent this context with a novel combination of
                            existing context values (i.e., Finding Context = Known Absent and
                            Temporal Context = Past). </para>
                    </listitem>
                    <listitem>
                        <para>The addition of the relationship “Observation Qualifier = Observation
                            Qualifier Value” to all Procedure, Observable Entity, and Clinical
                            Finding concepts in the SCT terminology may create semantically
                            nonsensical expressions when such concepts are used outside the
                            documentation context of the patient medical record. For example, a
                            Procedure concept specified as an ordered procedure could be assigned a
                            “Observation Qualifier Value” of “Status Post” (which wouldn’t make
                            sense in that documentation context). Because certain of the context
                            qualifiers apply only when a concept is used in the documentation
                            context of a medical record, the “Observation Qualifier” attribute
                            probably should not be assigned to all Procedure, Observable Entities,
                            and Clinical Findings concepts in the SCT model. The SNOMED context
                            model avoids this problem by assigning context attributes only to the
                            special wrapper concepts of Context Dependent Finding and Context
                            Dependent Procedure.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>Relational Context Model</title>
                <para>A third alternative is to introduce the notion of an Observation Qualifier
                    attribute with the same set of potential values, but not explicitly add this
                    attribute to the SCT terminology model. Rather, the attribute and its values
                    would be represented only as an additional field in the relational table or an
                    additional attribute in the Caché tree structure (i.e., similar to a partial
                    Restricted Relational Decomposition, except the Observation Qualifier attribute
                    would not be part of the SCT terminology model). For example, under this model,
                    the “s/p emergency cholecystectomy” observation would be represented in the
                    relational database as:</para>
                <para><inlinemediaobject>
                        <imageobject>
                            <imagedata fileref="images/image8.png"
                                width="5.5in"/>
                        </imageobject>
                    </inlinemediaobject></para>
                <para>and in a Caché tree structure as:</para>
                <para><inlinemediaobject>
                        <imageobject>
                            <imagedata fileref="images/image9.png"
                                width="5.5in"/>
                        </imageobject>
                    </inlinemediaobject></para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Also a relatively simple model.</para>
                    </listitem>
                    <listitem>
                        <para>Avoids the problem of adding the Observation Qualifier attribute to
                            all Procedure, Observable Entity, and Clinical Finding concepts in the
                            SCT terminology and creating potentially nonsensical concept expressions
                            in certain documentation contexts.</para>
                    </listitem>
                    <listitem>
                        <para>Provides richer testing against logical combinations of contexts than
                            afforded by the SNOMED expression language. Specifically, SQL queries
                            may explicitly search for Boolean combinations of ContextCode values,
                            such as “WHERE ContextCode = ‘HistoryOf’ OR ContextCode = ‘StatusPost’
                            “, without requiring multiple subsumption tests.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Supports no logical subsumption testing involving context values
                            (e.g., to infer that “past” is subsumed by “past or current”).</para>
                    </listitem>
                    <listitem>
                        <para>Involves the same combinatorics to represent new combinations of
                            “present/absent”, “current/past”, and “patient/family” context
                            designations.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section xml:id="_Ref161817374">
                <title>Combination of Approaches</title>
                <para>Lastly, a fourth approach entails combining elements of the approaches above.
                    For example, one could use the SNOMED context model, but redundantly represent
                    the values of the context qualifiers in their own relational fields, as well as
                    represent a new “summary qualifier” field whose value stores a more intuitive
                    representation of the context (which would be derived from the combination of
                    SNOMED context values). Under this model, the documentation of “no family
                    history of severe hypertension” would be represented in a relational table
                    as:</para>
                <para><inlinemediaobject>
                        <imageobject>
                            <imagedata fileref="images/image10.png"
                                width="5.5in"/>
                        </imageobject>
                    </inlinemediaobject></para>
                <para>and in a Caché tree structure as:</para>
                <para><inlinemediaobject>
                        <imageobject>
                            <imagedata fileref="images/image11.png"
                                width="5.5in"/>
                        </imageobject>
                    </inlinemediaobject></para>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Supports full subsumption testing of observations with context, when
                            needed</para>
                    </listitem>
                    <listitem>
                        <para>Avoids the problem of adding the Observation Qualifier attribute to
                            all Procedure, Observable Entity, and Clinical Finding concepts in the
                            SCT terminology, which could lead to nonsensical concept expressions in
                            certain documentation contexts.</para>
                    </listitem>
                    <listitem>
                        <para>Provides a derived summary context that approximates the current
                            observation qualifiers and provides a convenient search key for certain
                            analyses. </para>
                    </listitem>
                    <listitem>
                        <para>Supports testing against logical combinations of SCT context
                            specifiers using SQL expressions, such as “WHERE
                            SubjectRelationshipContext = ‘Mother’ OR SubjectRelationshipContext =
                            ‘Sister’ “. In the absence of storing the SCT context specifiers in
                            separate fields, multiple subsumption tests would be required to apply
                            such logic.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Some redundant representation of data, which entails decreased storage
                            performance and increased risk of inconsistencies.</para>
                    </listitem>
                </itemizedlist>
            </section>
        </section>
        <section xml:id="_Ref161759449">
            <title>Computation of Transitive Closure</title>
            <para>Subsumption testing against patient observations is an important but
                computationally intensive operation. Testing subsumption between two pre-coordinated
                concepts entails determining whether the concepts (i.e., their GUIDs) have an
                ancestor-descendant relationship in the SCT concept hierarchy. Unless certain
                optimizations are applied (as discussed below), this determination entails a tree
                traversal of the hierarchy, which has exponential combinatorics. In large
                terminologies, such as SCT, exponential tree traversals may be prohibitively slow
                for queries that must execute in real time or queries that must evaluate many
                observations.</para>
            <para>Subsumption testing of post-coordinated expressions is even more complex. It
                requires an algorithmic comparison of the predicate and candidate expressions (in
                their normalized forms), which itself requires several steps that involve
                subsumption testing:</para>
            <orderedlist>
                <listitem>
                    <para>Determine whether the predicate’s focus concept subsume the candidate’s
                        focus concept. Note: Both focus concepts will be primitive SCT concepts
                        following normalization.</para>
                </listitem>
                <listitem>
                    <para>Determine whether all of the relationship attributes of the predicate’s
                        focus concept subsume at least some of the relationship attributes of the
                        candidate’s focus concept.</para>
                </listitem>
                <listitem>
                    <para>For each subsumed relationship attribute, determine whether its value in
                        the predicate expression subsume the value in the candidate expression. If
                        the value of an attribute is a concept that, itself, has attributes, apply
                        steps 1, 2, and 3 recursively.</para>
                </listitem>
            </orderedlist>
            <para>Note: In practice, the post-coordinated observation expressions specified by
                clinicians will typically have a small number of relationship attributes. However,
                when a candidate expression is converted to its Long Normal Form (as required for
                subsumption testing), the number of attributes may increase significantly (e.g., see
                Section <xref linkend="_Ref160162018"/>). This increase, in turn, increases the
                number of subsumption tests required.</para>
            <para>A recognized strategy to improve the performance of subsumption testing is to
                compute and store the <emphasis>transitive closure</emphasis> of the pre-coordinated
                concepts in the SCT concept hierarchy. The transitive closure is the set of all
                ancestor-descendant pairs in the hierarchy. For example, the small hierarchy shown
                in Sec. <xref linkend="_Ref160169044"/> would generate the following
                ancestor-descendant pairs:</para>
            <para>disease =&gt; infectious disease disease =&gt; infective pneumonia disease =&gt;
                bacterial pneumonia infectious disease =&gt; infective pneumonia infectious disease
                =&gt; bacterial pneumonia infective pneumonia =&gt; bacterial pneumonia etc…</para>
            <para>The storage of a transitive closure significantly improves the performance of
                subsumption testing. Each pair-wise subsumption test becomes a lookup in an indexed
                list of ancestor-descendant pairs (typically an O(n log n) operation with n = number
                of levels in the hierarchy), rather than a recursive tree traversal (an
                    O(k<superscript>n</superscript>) operation). However, this approach requires
                storing the transitive closure, which may be very large, and updating the transitive
                closure whenever the structure of the concept hierarchy changes. The addition of a
                single concept, for example, may generate many new ancestor-descendant pairs.</para>
            <para>The options with respect to precomputing transitive closures include the
                following:</para>
            <section>
                <title>Compute no transitive closure</title>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>The default approach, which requires the least amount of disk storage
                            and is simplest to implement and maintain. </para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Potential for prohibitively slow performance for subsumption testing
                            against observations.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>Compute the full transitive closure of the relevant SCT concept
                    hierarchy</title>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>A significant performance improvement for subsumption testing of
                            pre-coordinated observation concepts. Such subsumption tests may be
                            performed as single lookups in the indexed table.</para>
                    </listitem>
                    <listitem>
                        <para>A significant performance improvement for subsumption testing of
                            post-coordinated observation expressions. Each of the subsumption tests
                            needed for this operation (i.e., tests between primitive SCT concepts)
                            may be performed as single lookups in the indexed table.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>An increase in required storage. Depending on the depth and
                            interconnectedness of the SCT concept hierarchy (which is a
                            multi-hierarchy), the transitive closure table might contain millions of
                            entries. For example, the NCBI ontology, which consists of 230,000
                            concepts, generates a transitive closure containing 3.5 million concept
                            pairs. A transitive closure for the SCT hierarchy will likely be
                            comparable. In practice, however, each entry will require modest storage
                            space, as it will contain only two GUIDs (each requiring 8 to 16
                            bytes).</para>
                    </listitem>
                    <listitem>
                        <para>An increase in complexity and risk of error when the SCT terminology
                            content changes (as a result of PHS edits or SNOMED releases). Any
                            content updates will require appropriate updates to the transitive
                            closure table. A mechanism will need to exist to perform these updates
                            reliably and efficiently. If the transitive closure tables are cached by
                            client applications (to enable local computation of decision-support
                            queries, for example), updates will also require a mechanism to refresh
                            the local caches in an appropriate, timely, and coordinated
                            manner.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>Compute the transitive closure for primitive concepts only</title>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Relative to computation and maintenance of the full transitive
                            closure, this approach may require significantly less storage space.
                            Although primitive concepts constitute the majority of the SCT concept
                            hierarchy, they appear typically at higher levels of the hierarchy
                            (where less branching exists). The result may be many fewer
                            ancestor-descendant pairs in which both concepts are primitive, although
                            one would want to confirm this empirically. </para>
                    </listitem>
                    <listitem>
                        <para>A significant performance improvement for subsumption testing of
                            post-coordinated observation expressions (which entails pair-wise
                            subsumption testing of primitive concepts only).</para>
                    </listitem>
                    <listitem>
                        <para>Somewhat less complexity and risk when the SCT terminology content
                            changes, because only additions, deletions, or modifications of
                            primitive concepts generates changes to the transitive closure
                            tables.</para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>No performance improvement for subsumption testing of pre-coordinated
                            concepts unless (1) both are primitive concepts or (2) both are first
                            normalized. Depending on the frequency with which pre-coordinated
                            concepts appear in medical records and query expressions, this may be
                            acceptable.</para>
                    </listitem>
                    <listitem>
                        <para>Some additional complexity in maintaining the transitive closure
                            because the primitive/defined state of concepts will have to be
                            considered in determining their effect on the transitive closure.</para>
                    </listitem>
                </itemizedlist>
            </section>
        </section>
        <section>
            <title>Just-in-Time Pre-coordination</title>
            <para>Just-in-time (JIT) pre-coordination is a further optimization for subsumption
                testing that involves post-coordinated expressions. The method assumes that a
                transitive closure table for the SCT hierarchy exists (see Section <xref
                    linkend="_Ref161759449"/>). For each post-coordinated expression that is created
                by a user, a new local concept definition and local concept identifier are created
                (“just-in-time”), stored in a reference table, classified with respect to the SCT
                hierarchy, and added to the transitive closure table. The identifier for the
                post-coordinated expression is stored in the patient’s medical record (instead of
                the expression itself), and the expression is referenced for any subsumption test
                that involves that patient’s medical record. Because the identifier has already been
                classified with respect to the entire SCT hierarchy in the course of adding it to
                the transitive closure, subsumption testing against the post-coordinated expression
                requires only an index lookup, rather than application of the full algorithm
                described in Section <xref linkend="_Ref161759449"/>. </para>
            <para>Note that before a new post-coordinated expression is added to the transitive
                closure table, the system first searches the set of existing expressions in the
                reference table (using equivalence testing) to check whether the new expression
                already appears there. If the expression does appear, its existing identifier is
                simply placed in the patient’s medical record, and no other operations are
                required.</para>
            <section>
                <title>Implementation of Just-in-Time Pre-Coordination</title>
                <para>PROS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Reduces subsumption testing to a single lookup in the
                            transitive-closure table in all cases, whether the subsumption test
                            involves pre-coordinated concepts or post-coordinated expressions.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>CONS:</para>
                <itemizedlist>
                    <listitem>
                        <para>Significantly increases the overhead for adding post-coordinated
                            observations to patient’s medical record. At a minimum, for each
                            post-coordinated observation that a user specifies, the system must
                            search the table of existing local concepts to check whether that
                            observation expression was previously pre-coordinated. If it was not,
                            the system must create a new pre-coordinated concept corresponding to
                            the observation expression, classify that concept with respect to the
                            existing SCT hierarchy, and update the transitive closure table with all
                            of the new entries generated by the addition of the local concept.
                            Although this process could be deferred, to prevent disrupting the user
                            workflow, the benefits of JIT pre-coordination cannot be realized until
                            this indexing process completes. </para>
                    </listitem>
                </itemizedlist>
            </section>
            <section>
                <title>No Implementation of Just-in-Time Pre-Coordination</title>
                <para>PROS and CONS: The opposite of those described in the section above.</para>
            </section>
        </section>
        <section xml:id="_Ref161820658">
            <title>Partial Subsumption Testing of Post-Coordinated Expressions</title>
            <para>Finally, another potential optimization for subsumption testing of
                post-coordinated expressions entails testing only the <emphasis>focus
                    concepts</emphasis> within such expressions, rather than the focus concepts and
                their full sets of attributes and values. Because the focus concept is always a
                pre-coordinated concept, a single “standard” subsumption test is sufficient, without
                need to apply the algorithm in Section <xref linkend="_Ref161759449"/>.</para>
            <para>For example, partial subsumption testing would reduce the following pair-wise
                subsumption test</para>
            <para><emphasis>Predicate expression</emphasis>: Pneumonia (ID = 233604007)</para>
            <para><emphasis>Candidate expression</emphasis>: Bacterial Pneumonia (ID = 53084003) :
                Causative Agent (ID=246075003) = Methicillin Resistant Staph. Aureus
                (ID=115329001)</para>
            <para>To the simpler subsumption test:</para>
            <para><emphasis>Predicate query expression</emphasis>: <literal>Pneumonia (ID =
                    233604007)</literal></para>
            <para><emphasis>Candidate observation expression</emphasis>: Bacterial Pneumonia (ID =
                53084003)</para>
            <para>PROS:</para>
            <itemizedlist>
                <listitem>
                    <para>The post-coordinated expression need not be normalized prior to
                        subsumption testing</para>
                </listitem>
                <listitem>
                    <para>A single pair-wise subsumption test can determine whether a candidate
                        post-coordinated expression is subsumed by the predicate expression, rather
                        than the potentially several pair-wise tests required by the algorithm in
                        Section <xref linkend="_Ref161759449"/> (depending on the structure of the
                        predicate and candidate expressions).</para>
                </listitem>
                <listitem>
                    <para>The pair-wise subsumption test involves pre-coordinated concepts only,
                        which is a simpler operation. If a transitive closure table for the SCT
                        terminology is available, the test can be performed with a single lookup in
                        this table. </para>
                </listitem>
                <listitem>
                    <para>Subsumption testing of post-coordinated concepts may take longer to
                        implement than that for pre-coordinated concepts. By allowing partial
                        subsumption testing, the PHS system could capture, store, and process
                        post-coordinated expressions during the interim period before full
                        functionality is available. When full subsumption testing becomes available,
                        the data would already exist to support it and the transition to the full
                        mode of processing would be relatively straightforward.</para>
                </listitem>
            </itemizedlist>
            <para>CONS:</para>
            <itemizedlist>
                <listitem>
                    <para>In a minority of cases, partial subsumption testing will produce incorrect
                        results. This occurs when a post-coordinated candidate expression is
                        logically subsumed by a predicate expression, but an attribute of the focus
                        concept in the candidate expression is required to correctly infer
                        subsumption. This can be seen in the following example: <emphasis>Predicate
                            query expression</emphasis>: <literal>Chronic Rhinitis (ID =
                            86094006)</literal>
                        <emphasis>Candidate observation expression</emphasis>:
                            <literal>Rhinitis</literal>
                        <literal>(ID = 70076002) Course (ID = 260908002) Chronic (ID = 90734009)
                            Severity (ID = 246112005) Mild (ID = 255604002) </literal>The partial
                        subsumption test would conclude that the focus concept “Rhinitis” is NOT
                        subsumed by “Chronic Rhinitis,” although the complete post-coordinated
                        expression would be subsumed by “Chronic Rhinitis” (given the refining
                        attributes of “Rhinitis” and the definition of “Chronic Rhinitis” in the SCT
                        terminology). </para>
                </listitem>
                <listitem>
                    <para>This approach will not work if the SNOMED context model is used, because
                        the focus concept in all observation expressions of this model is either
                        “Context Dependent Finding” or “Context Dependent Procedure” (see Section
                            <xref linkend="_Ref161810950"/>). The finding or procedure, itself, is a
                            <emphasis>value </emphasis>of the attribute Associated Finding or
                        Associated Procedure, and these values will not be considered by a partial
                        subsumption test unless they are first extracted from the expression by a
                        pre-processing step.</para>
                </listitem>
            </itemizedlist>
        </section>
    </section>
    <section xml:id="_Ref161828434">
        <title>Recommendations</title>
        <section>
            <title>Abstract Model</title>
            <para>We recommend persisting the following forms for each post-coordinated observation
                expression (Option 3):</para>
            <orderedlist>
                <listitem>
                    <para>Close-to-user form (i.e., the SNOMED expression that the user actually
                        specified). This form will allow the system to later re-derive the other
                        normalized forms when necessary.</para>
                </listitem>
                <listitem>
                    <para>Text-rendered form (i.e., the original text display of the expression that
                        the user specified). This form is important for medicolegal purposes to
                        provide a record of the information that the user viewed and attested when
                        updating the patient record (including any text annotations that may not be
                        captured in the formal SNOMED representation). This form is also important
                        for clinical care, to ensure that subsequent users see the same and complete
                        clinical expression that the author intended.</para>
                </listitem>
                <listitem>
                    <para>Long-normal form (i.e., the normalized form that may be used in
                        subsumption testing without further transformation). The caching of this
                        form is important for reasonable performance when subsumption testing is
                        performed against post-coordinated expressions. This form may need to be
                        updated when changes to the SCT terminology content occur (either due to
                        local extensions or periodic SNOMED releases). A process will need to exist
                        to scan the entire medical record and update relevant post-coordinated
                        expressions following content revisions. </para>
                </listitem>
            </orderedlist>
            <para>The Short-normal form and Canonical form need not be persisted because they will
                rarely be used and can be derived from the Close-to-user form when needed. </para>
            <para><emphasis role="bold">Note</emphasis>: The question arises as to whether the
                long-normal form of <emphasis>pre-coordinated</emphasis> concepts (i.e., those with
                single GUIDs) should also be derived and persisted in the medical record. The proper
                approach is YES, <emphasis>if post-coordinated expressions may appear as predicates
                    in queries</emphasis>. In these cases, subsumption testing will require that the
                candidate expression be in its normalized form even if it is a pre-coordinated
                concept. If post-coordinated expressions will not appear as predicates in queries,
                then the normalized form of pre-coordinated concepts need not be persisted (because
                testing subsumption between two pre-coordinated concepts does not require it). </para>
            <para>The derivation, storage, and maintenance of the long-normal form for observation
                expressions will certainly create additional overhead for electronic health record
                systems. If organizations plan to maintain a separate analytical data store (data
                warehouse) for performing complex queries across many patient records, they may wish
                to persist and maintain the long normal form in the analytical data store only. If
                queries and subsumption tests against the operational data store involve the records
                of individual patients only (such as the queries typically executed for real-time
                decision support), it may be feasible to derive the long normal forms of
                post-coordinated observations at the time the patient’s record is retrieved. Such
                “just-in-time” normalization would not be practical in the analytical data store,
                however, where queries that search large data sets must perform efficiently.</para>
        </section>
        <section>
            <title>Structure and Syntax</title>
            <para>If a relational database will be used, I recommend persisting post-coordinated
                expressions using the SNOMED compositional grammar, or some local variation thereof
                (e.g., including GUIDs rather than SNOMED concept IDs). This approach will enable
                complete post-coordinated expressions to be written to and retrieved from the
                database efficiently. </para>
            <para>Because subsumption-testing and other logical operations on post-coordinated
                expressions will require specialized middleware (i.e., the Health Language Engine),
                there is little advantage to exposing the structure of such expressions to SQL and
                related programming tools. The performance disadvantages of exposing the structure
                through various relational decompositions could be significant. </para>
            <para>The SNOMED compositional grammar is preferred to the HL7 CD data type and to a
                binary representation primarily because the latter approaches will require greater
                maintenance effort. A binary representation may need to change each time the
                middleware that defines it is updated. HL7 may maintain the CD data type on a
                different schedule or based on different requirements than those of PHS, creating
                undue constraints.</para>
            <para>If the Cache hierarchical database will be used, I am not sufficiently familiar
                with the technology to make a recommendation regarding structure and syntax. If a
                single data element will be used to store post-coordinated expressions, however, I
                again recommend using the SNOMED compositional grammar rather than the HL7 CD data
                type or a binary representation (for the same reasons as above). However, it may be
                preferable to store the components of post-coordinated expressions as discrete data
                elements in a structured hierarchical tree (see Section <xref
                    linkend="_Ref161817243"/>), depending on the technical capabilities of
                Caché.</para>
        </section>
        <section>
            <title>Representation of Context</title>
            <para>I recommend the hybrid approach described in Section <xref linkend="_Ref161817374"
                />. This approach provides a variety of mechanisms to query the context associated
                with an observation (whether post-coordinated or pre-coordinated), depending on the
                needs of the analysis and the skills of the analyst. The only disadvantage of the
                approach is the storage of redundant data elements. However, unlike the storage of
                the long normalized form (which also represents redundant information), these data
                elements do not need to be updated with each extension or revision of the SNOMED
                terminology because they are derived from the close-to-user form, rather than the
                normalized form.</para>
        </section>
        <section>
            <title>Computation of Transitive Closure </title>
            <para>Although I am not familiar with HLI’s specific plans for implementing subsumption
                testing, I believe that the computation and maintenance of a transitive closure
                table will be essential to make such a feature computationally feasible. The
                question remains whether the transitive closure should be computed and maintained
                within the Terminology Server (i.e., as a feature of the terminology middleware), or
                within EHR’s own computing environment (i.e., as a feature of the medical record
                system). The former approach makes much more sense, since it allows maintenance of
                the terminology and the transitive closure to be centrally managed and coordinated.
                Also, it is likely that any other user of the terminology server that use the
                planned subsumption-testing feature will require a transitive closure table
                (particularly if they use the SNOMED terminology), so providing the table and the
                mechanisms to maintain it will be a practical requirement for the terminology
                server.</para>
            <para>To enable efficient subsumption testing of pre-coordinated or post-coordinated
                observation expressions, I recommend computing the full transitive closure table for
                the relevant SCT hierarchy (rather than a table of primitive concepts only). If the
                creation or maintenance of the full table proves too difficult, costly, or
                error-prone, HLI can later scale back the table to include primitive concepts
                only.</para>
        </section>
        <section>
            <title>Just-in-Time Pre-coordination</title>
            <para>I do not recommend the approach of just-in-time pre-coordination at this time. The
                additional complexity and overhead involved in potentially updating the terminology
                and the transitive-closure table each time a post-coordinated observation expression
                is created is unlikely to be justified by whatever performance gains are achieved.
                If a transitive closure table exists for all pre-coordinated concepts, execution of
                the algorithm in Section <xref linkend="_Ref161759449"/> is likely to be
                sufficiently fast, even in the absence of JIT pre-coordination.</para>
            <para>However, given the additional demands on analytical queries against large data
                sets, PHS may wish to consider implementing JIT pre-coordination in any data
                warehouse that contains post-coordinated observation expressions. For this
                application, the batch processes required to find and classify all unique
                post-coordinated expressions may be more feasible (given the greater down time
                available for non-operational databases) and more valuable (given the greater
                performance requirements of each subsumption test when thousands may be required by
                a single query). </para>
        </section>
        <section>
            <title>Partial Subsumption Testing </title>
            <para xml:lang="de-DE">Partial subsumption testing of post-coordinated expressions, as
                described in Section <xref linkend="_Ref161820658"/>, is a viable short-term
                strategy that will allow post-coordinated expressions to be created by users and
                leveraged in queries even before the algorithms to support full subsumption testing
                aren implemented in LE. It is likely that the vast majority of subsumption tests
                executed using this method will return correct results, given the types of
                observation expressions and queries that are likely to exist. However, PHS must bear
                in mind the potential for incorrect subsumption-testing results until a correct
                algorithm is implemented. Specifically, PHS may wish to refrain from relying on
                subsumption testing in “mission-critical“ operations.</para>
            <para xml:lang="de-DE">To facilitate the use of this technique, we recommend separately
                persisting the focus concept of the relevant clinical observation for each
                observation expression. For example, if the post-coordinated expression is:</para>
            <para>Context-Dependent Finding : Finding Context = Definitely Present Temporal Context
                = Current Subject-Relationship Context = Subject of Record Associated Finding = Tear
                of Anterior Cruciate Ligament : Severity = Mild, Finding Site = Anterior Cruciate
                Ligament : Laterality = Right</para>
            <para xml:lang="de-DE">the persisted record would contain a separate and discrete
                representation of:</para>
            <para> Tear of Anterior Cruciate Ligament</para>
        </section>
        <section>
            <title>Summary of Recommendations: An Example </title>
            <para>Based on each of the preceding recommendations, this section presents the
                representation of a single post-coordinated expression in the recommended persisted
                form. The expression represents the entered observation:</para>
            <para>“No family history of chronic allergic asthma”</para>
            <para>Relational Representation:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image12.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
            <para>Caché Hierarchical Representation:</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="images/image13.png"
                            width="5.5in"/>
                    </imageobject>
                </inlinemediaobject></para>
        </section>
    </section>
    <section>
        <title>Appendix A: Glossary</title>
        <informaltable>
            <tgroup cols="3">
                <colspec colname="c1" colwidth="22*"/>
                <colspec colname="c2" colwidth="32*"/>
                <colspec colname="c3" colwidth="46*"/>
                <thead valign="top">
                    <row>
                        <entry><para>Term</para></entry>
                        <entry><para>Definition</para></entry>
                        <entry><para>Example</para></entry>
                    </row>
                    <row>
                        <entry><para>concept</para></entry>
                        <entry><para>A clinical idea</para></entry>
                        <entry><para>The concept of a broken femur bone</para></entry>
                    </row>
                    <row>
                        <entry><para>Concept</para></entry>
                        <entry><para>A clinical idea to which a unique SNOMED ConceptId has been
                                assigned</para></entry>
                        <entry><para>Fracture of Femur (SNOMED ConceptID = 71620000)</para></entry>
                    </row>
                    <row>
                        <entry><para>Attribute</para></entry>
                        <entry><para>A type of association between two Concepts</para></entry>
                        <entry><para>Finding Site</para></entry>
                    </row>
                    <row>
                        <entry><para>Relationship</para></entry>
                        <entry><para>An association between two Concepts </para></entry>
                        <entry><para>Fracture of Femur : Finding Site = Bone Structure of Femur
                            </para></entry>
                    </row>
                    <row>
                        <entry><para>Concept Definition</para></entry>
                        <entry><para>A collection of Relationships that logically defines the
                                meaning of a Concept in SNOMED</para></entry>
                        <entry><para>Fracture of Femur : IS-A = Injury of Thigh, Finding Site = Bone
                                Structure of Femur, Morphology = Fracture</para></entry>
                    </row>
                    <row>
                        <entry><para>Pre-coordinated concept</para></entry>
                        <entry><para>A concept that is pre-defined as a Concept in
                            SNOMED</para></entry>
                        <entry><para>Fracture of Femur (SNOMED ConceptID = 71620000) : IS-A = Injury
                                of Thigh, Finding Site = Bone Structure of Femur, Morphology =
                                Fracture</para></entry>
                    </row>
                    <row>
                        <entry><para>Expression</para></entry>
                        <entry><para>A collection of references to one or more Concepts used to
                                express an instance of a clinical idea (i.e., in a particular
                                patient)</para><para>An expression may consist of a single ConceptID
                                or a large collection of related Concepts</para></entry>
                        <entry><para>Fracture of Femur </para><para> OR</para><para>Fracture of
                                Femur : Finding Site = Structure of Head of Femur : Laterality =
                                Left, Morphology = Spiral Fracture</para></entry>
                    </row>
                    <row>
                        <entry><para>Post-coordinated Expression</para></entry>
                        <entry><para>An expression created to represent an instance of a clinical
                                idea that does not exist as a pre-defined Concept in
                            SNOMED</para></entry>
                        <entry><para>Fracture of Femur : Finding Site = Structure of Head of Femur :
                                Laterality = Left, Morphology = Spiral
                                Fracture</para><para>(clinical idea = spiral fracture of the left
                                femur)</para></entry>
                    </row>
                    <row>
                        <entry><para>Refinement</para></entry>
                        <entry><para>The further specification or addition of Relationships to a
                                predefined Concept to express a more specific concept</para></entry>
                        <entry><para><emphasis role="underline">Pre-defined Concept</emphasis>
                                Fracture of Femur : IS-A = Injury of Thigh, Finding Site = Bone
                                Structure of Femur, Morphology = Fracture</para><para><emphasis
                                    role="underline">Refinement</emphasis> Fracture of Femur :
                                Finding Site = Structure of Head of Femur : Laterality = Left,
                                Morphology = Spiral Fracture, Severity = Severe</para></entry>
                    </row>
                    <row>
                        <entry><para>Focus Concept</para></entry>
                        <entry><para>The core concept that is refined in a post-coordinated
                                expression</para></entry>
                        <entry><para>Fracture of Femur (SNOMED ConceptID = 71620000) </para><para>
                                IN</para><para>Fracture of Femur : Finding Site = Structure of Head
                                of Femur : Laterality = Left, Morphology = Spiral Fracture, Severity
                                = Severe</para></entry>
                    </row>
                    <row>
                        <entry><para>Subsumption Testing</para></entry>
                        <entry><para>The logical determination of whether a concept (as represented
                                by an Expression) is more specific than another concept (also
                                represented by an Expression). If so, the more specific concept
                                    <emphasis>is subsumed by</emphasis> the more general concept,
                                and the more general concept <emphasis>subsumes</emphasis> the more
                                specific concept.</para></entry>
                        <entry><para>Fracture of Femur (see Concept Definition above)</para><para>
                                SUBSUMES</para><para>Fracture : Finding Site = Structure of Head of
                                Femur : Laterality = Left, Morphology = Spiral
                                Fracture</para><para>(the head of the femur is a part of the femur,
                                and a spiral fracture is a kind of fracture)</para><para>Fracture of
                                Femur (see Concept Definition above)</para><para> DOES NOT
                                SUBSUME</para><para>Fracture : Finding Site = Bone Structure of
                                Shaft of Fibula Morphology = Transverse Fracture</para><para>(the
                                shaft of the fibula is not a part of the femur)</para></entry>
                    </row>
                    <row>
                        <entry><para>Equivalence Testing</para></entry>
                        <entry><para>The logical determination of whether a concept (as represented
                                by an Expression) is exactly the same as another concept (also
                                represented by an Expression). If so, the two concepts are
                                    <emphasis>equivalent.</emphasis></para></entry>
                        <entry><para>Fracture of Femur (see Concept Definition above)</para><para>
                                IS EQUIVALENT TO</para><para>Traumatic Injury : Finding Site = Bone
                                Structure of Femur Morphology = Fracture</para><para>Fracture of
                                Femur (see Concept Definition above)</para><para> IS NOT EQUIVALENT
                                TO</para><para>Traumatic Injury : Finding Site = Structure of Head
                                of Femur : Laterality = Left, Morphology = Spiral
                                Fracture</para><para>(the second concept is more specific than
                                “Fracture of Femur”; although it is subsumed by it, it is not
                                equivalent to it)</para></entry>
                    </row>
                    <row>
                        <entry><para>Predicate Expression</para></entry>
                        <entry><para>The Expression that is being tested as the <emphasis>more
                                    general </emphasis>concept in a subsumption test. This is
                                typically the expression that appears in a query.</para></entry>
                        <entry><para><emphasis role="underline">Fracture of Femur</emphasis> in the
                                subsumption tests above</para></entry>
                    </row>
                    <row>
                        <entry><para>Candidate Expression</para></entry>
                        <entry><para>The Expression that is being tested as the <emphasis>more
                                    specific </emphasis>concept in a subsumption test. This is
                                typically the expression that appears in the patient
                            record.</para></entry>
                        <entry><para>Post-coordinated Expressions in the subsumption tests
                                above</para></entry>
                    </row>
                </thead>
                <tbody valign="top"><row><entry></entry><entry></entry><entry></entry></row></tbody> 
            </tgroup>
        </informaltable>
    </section>
</article>
